version: '3.5'

volumes:
  rinhadb:

networks:
  postgresqlWeb:
  rinhaWeb:


services:

  postgresql:
    image: "postgres:latest"
    container_name: postgresql
    volumes:
      - rinhadb:/var/lib/postgresql
    networks: 
      - postgresqlWeb
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=root    
      - POSTGRES_DB=rinha
    command: postgres -c 'max_connections=450'
    deploy:
      resources:
        limits:
          cpus: '0.35'
          memory: '1.3GB'
  
  api1:
    build:
      context: .
      dockerfile: dockerfile
    container_name: rinha1
    hostname: api1
    networks:
      - postgresqlWeb
      - rinhaWeb
    environment:
      PORT: 3000
      DB_HOST: localhost
      DB_POOL: 1024
      REDIS_HOST: localhost
      REDIS_POOL_SIZE: 50
      JOB_BATCH_SIZE: 100
      CACHE_EXPIRES_SECONDS: 60
    depends_on:
      - postgresql
      - redis
    deploy:
      resources:
        limits:
          cpus: '0.45'
          memory: '0.5GB'

  api2:
    build:
      context: .
      dockerfile: dockerfile
    container_name: rinha2
    hostname: api2
    networks:
      - postgresqlWeb
      - rinhaWeb
    environment:
      PORT: 3001
      DB_HOST: localhost
      DB_POOL: 1024
      REDIS_HOST: localhost
      REDIS_POOL_SIZE: 50
      JOB_BATCH_SIZE: 100
      CACHE_EXPIRES_SECONDS: 60
    depends_on:
      - postgresql
      - redis
    deploy:
      resources:
        limits:
          cpus: '0.45'
          memory: '0.5GB'
  
  nginx:
    image: "nginx:latest"
    command: ["nginx", "-g", "daemon off;"]
    depends_on:
      - api1
      - api2
    networks:
      - rinhaWeb
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: '0.45'
          memory: '0.5GB'

  redis:
    image: 'redis:latest'
    hostname: redis
    networks:
      - rinhaWeb
      - redis
    deploy:
      resources:
        limits:
          cpus: '0.05'
          memory: '0.1GB'